{
	"info": {
		"_postman_id": "8385950b-c04b-48c8-88b1-c511b5947409",
		"name": "Batch20",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29102042",
		"_collection_link": "https://lunar-astronaut-881081.postman.co/workspace/Nazmul-Test-Api-01~7ee8ea68-6f8a-42fc-9dca-022d09d8dc7f/collection/29102042-8385950b-c04b-48c8-88b1-c511b5947409?action=share&source=collection_link&creator=29102042"
	},
	"item": [
		{
			"name": "create booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"id\", jsonData.bookingid)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(\"First Name Value:\"+ firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastname = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(\"Last Name Value:\"+ lastname)\r",
							"pm.environment.set(\"lastname\",lastname)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\": \"{{firstName}}\",\r\n\t\"lastname\": \"{{lastname}}\",\r\n\t\"totalprice\": 111,\r\n\t\"depositpaid\": true,\r\n\t\"bookingdates\": {\r\n    \t\"checkin\": \"2013-02-23\",\r\n    \t\"checkout\": \"2014-10-23\"\r\n\t},\r\n\t\"additionalneeds\": \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "booking info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statuscode = pm.response.code\r",
							"console.log(statuscode)\r",
							"\r",
							"if(statuscode==200){\r",
							"    var jsonData = pm.response.json()\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"First Name validation\", function () {\r",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"});\r",
							"\r",
							"pm.test(\"Last Name validation\", function () {\r",
							"    pm.expect(jsonData.lirstname).to.eql(pm.environment.get(\"lastName\"))\r",
							"});\r",
							"\r",
							"pm.test(\"Checkin Data validation\", function () {\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(\"2013-02-23\")\r",
							"});\r",
							"\r",
							"pm.test(\"Checkout Data validation\", function () {\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(\"2014-10-23\")\r",
							"});\r",
							"}\r",
							"else if(statuscode==404){\r",
							"    pm.test(\"NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    });\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/booking/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"token\", jsonData.token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "update booking info",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"nazmul\",\r\n\t\"lastname\" : \"Brown\",\r\n\t\"totalprice\" : 111,\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"2018-01-01\",\r\n    \t\"checkout\" : \"2019-01-01\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "booking info Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statuscode = pm.response.code\r",
							"console.log(statuscode)\r",
							"\r",
							"if(statuscode==200){\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('First Name validation', function () {\r",
							"    pm.expect(jsonData.firstname).to.eql('nazmul');\r",
							"})\r",
							"\r",
							"pm.test('Last Name validation', function () {\r",
							"    pm.expect(jsonData.lastname).to.eql('Brown');\r",
							"})\r",
							"\r",
							"pm.test(\"Totalprice validation\", function () {\r",
							"  pm.expect(jsonData.totalprice).to.eql(111);\r",
							"});\r",
							"\r",
							"pm.test('Checkin Data validation', function () {\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql('2018-01-01');\r",
							"})\r",
							"\r",
							"pm.test('Checkout Data validation', function () {\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql('2019-01-01');\r",
							"})\r",
							"\r",
							"pm.test('additionalneeds validation', function () {\r",
							"    pm.expect(jsonData.additionalneeds).to.eql('Breakfast');\r",
							"})\r",
							"}\r",
							"else if(statuscode==404){\r",
							"    pm.test(\"NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    });\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/booking/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/booking/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}
